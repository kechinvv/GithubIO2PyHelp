T 56 K [ директива IO2, установка адреса загрузки ]
G K    [ директива IO2, фиксация начального адреса подпрограммы ]
A 3 F [ пролог: формирование кода инструкции возврата в Acc ]
T [<ret>] @ [ пролог: запись инструкции возврата ]



A 5[len] F
A [1] @
T [cur_len] @
A [1] @
T [count] @
A [1] @
T [count2] @     [set_params]

A [sw1] @
A 4 F
T [sw1] @   [set last_el]

A [sw2] @
A 4 F
T [sw2] @     [set last_el]

A [for_max] @
A 1 F
T [for_max] @   [set 1 el]


A 0[f_el] F [fl]
U 0[f_el] F [tfl]

A [fl] @
A 1 F
T [fl] @

A [tfl] @
A 1 F
T [tfl] @     [указатели на первый элменет]
 
[loop]

T 0 F [l1]

A [cur_len] @
S [1] @
T [cur_len] @    [-1 количество необработанных элементов]


A [fl] @
U [cur] @
T [ss1] @

A [tfl] @
U [cur_d] @
T [ss2] @       [вовзвращаемся к первому элементу массива для поиска максимума]


A [1] @

T [count2] @    [счетчик второго цикла = 1]


A 0[f_el] F [for_max]
T [max] @       [первый элемент = макс]

[loop2]

T 0 F [l2]      [обнуление асс]

A [count2] @
S [cur_len] @
E [l11] @       [check cond]

A [cur_len] @
A [1] @


T [count2] @   [счетчик2+=1]


A [cur] @   [итерация по элементам]

A 2 F     [итерация по элементам]

T [cur] @     [итерация по элементам]

A [cur_d] @      [итерация по элементам]

A 2 F           [итерация по элементам]

T [cur_d] @          [итерация по элементам]

A 0[f_el] F [cur]    [итерация по элементам]

U 0[f_el] F [cur_d]  [итерация по элементам]


S [max] @        [-max]

G [l2] @          [возврат к первой строчке второго цикла если макс не поменялся]


A [max] @       [+max, получаем число, которое было]

T [max] @        [присваиваем max значение]

A [cur] @

T [ss1] @      [присваиваем max значение для swap]

A [cur_d] @

T [ss2] @       [присваиваем max значение для swap]



A [count2] @

S [cur_len] @

G [l2] @    [возврат к первой строчке второго цикла если не пройдены все значения]



T 0 F [l11]           [acc=0] 
A 0[f_el] F [ss1] [загрузка в аккумулятор значения из ячейки N  ]

T 0 F        [запись этого значения в рабочую ячейку, обнуление аккумулятора]

A 0[l_el] F [sw1] [загрузка в аккумулятор значения из ячейки N+1]

U 0[f_el] F [ss2] [ запись этого значения в ячейку с адресом N, обнуление аккумулятора]

T 6 F

A 0 F    [загрузка в аккумулятор значения из ячейки 0]

T 0[l_el] F [sw2] [ запись этого значения в ячейку с адресом N+1, обнуление аккумулятора]


A [sw1] @

S 2 F

T [sw1] @

A [sw2] @

S 2 F

T [sw2] @       [убираем обработанный элемент из дальнейшей обработки]


A [count] @

A [1] @

U [count] @

S 5[len] F

G [l1] @    [конец цикла или возврат к первому действию если не прошло итераций = длине]

 
T 0 F [ обнуление аккумулятора ] [exit:]
T 1 F
T 4 F
T 5 F   [reset]

E 0 F [<ret>] [ эпилог: инструкция возврата из подпрограммы ] 

P 0 F [max]
P 0 F [count] [= 0]
P 0 F [count2] [= 0]
P 0 F [cur_len] [= ...]
P 0 D [1]



G K      [директива IO2,фиксация начального адреса программы ]
X 0 F [ для пошаговой отладки использовать Z 0 F ]
A [<f_el>] @ [ адрес 1 элемента ]
T 1 F [ запись адреса 1 эл ячейку 1, обнуление аккумулятора ]
A [<f_el>] @ [ адрес последнего элемента ]
A [<len>] @
A [<len>] @
S 2 F
T 4 F [ запись адреса посл эл в ячейку 2, обнуление аккумулятора ]
A [<len>] @ [ длина массива ]
T 5 F [ запись длины массива в ячейку 3, обнуление аккумулятора ]
A [вызов] @ [вызов]
G 56 [<sub>] F  [/ подпрограммы ]
Z 0 F [ останов ]


P 5 D [<len>] [=11]
P [<f_el1>] @ [<f_el>] 


[array:]
P 4 F [<f_el1>]   [ 8 ] 
P 0 D   [ 1 ]
P 1 F   [ 2 ]
P 1 D   [ 3 ]
P 5 F   [ 10 ]
P 2 D   [ 5 ]
P 3 F   [ 6 ]
P 4 D   [ 9 ]
P 0 F   [ 0 ]
P 3 D   [ 7 ]
P 2 F   [ 4 ] 
 EZ PF [директива IO2, переход к исполнению ]